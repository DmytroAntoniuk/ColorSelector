include "colorSelector.tis";


class Body : Element
{

	function attached(){	
		const addColor = false;
		LayoutControl.generateLayout(addColor);
		view.on("size", function() {
			const addColBlock = $(#addColorBlock);
			const isSmallEnough = $(#colorsContainer).box(#width) < 650;
			$(#colorsContainer).@#layout_type  = isSmallEnough ? "grid" : "line";
		});
	}	
}


class AddColorBlock : Element
{
	function attached(){
		stdout.$n(attachedAddColorBlock);
		this.onClick = handleClick;
	}

	function detached(){
		stdout.$n(detachedAddColorBlock);
	}

	function handleClick(){
		 $(#addColorBlock).popup($(#popupMenu), 2);
	}
}

class CloseButton : Element
{
	function attached(){
		stdout.$n(attachedClose);
		this.onClick = handleClick;
	}

	function detached(){
		stdout.$n(detachedClose);
	}

	function handleClick(){
		const colorBlock = this.parent;
		LayoutControl.removeBlock(colorBlock);
	}
}

class ColorBlock : Element
{
	function attached(){
		stdout.$n(attachedColorBtn);
		this.onClick = handleClick;
	}

	function detached(){
		stdout.$n(detachedColorBtn);
	}

	function handleClick(){

		LayoutControl.setActiveBlock(this);
		LayoutControl.fillPreview(this.style#background-color);
	}
}

class NoColorBlock : Element
{
	function attached(){
		this.onClick = handleClick;
	}

	function handleClick(){
		LayoutControl.fillPreview(color("white"));
	}
}
