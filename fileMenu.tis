include "LayoutControl.tis";

class FileMenu : Element
{
    event click $(button#saveFileBtn) {
        saveFile();
        return true; 
    }

    event click $(button#openFileBtn) {
        openFile();
        return true; 
    }

    function saveFile(){     
        const filePath = "/Users/dantoni/Documents/Projects/ColorSelector/data.csel";
        const fileMode = "w";
        const fileStreamWrite = Stream.openFile(filePath, fileMode);
        const controller = LayoutController.getInstance();
        controller.showBlocksArray();
        stdout.$n(controller = {controller.p_blockColorsList});
        const blockListJSON = JSON.stringify(controller.p_blockColorsList);
        fileStreamWrite.print(controller.p_elementCounter+"\n");
        fileStreamWrite.print(blockListJSON); 
        fileStreamWrite.close();
    }

    function openFile(){
        const controller = LayoutController.getInstance();
        controller.clearBlockList();
        controller.removeLayout();
        parseBlocksProperties();
        controller.generateBlocks();
        var activeBlock = controller.p_blockColorsList.find(:el :el.active == true)
        var previewColor;
        if (activeBlock == undefined) previewColor = "white"; 
        else previewColor = activeBlock.color;
        self.postEvent("colorChanged", {color : previewColor});

    }

    function parseBlocksProperties(){
        const controller = LayoutController.getInstance();
        const filePath = "/Users/dantoni/Documents/Projects/ColorSelector/data.csel";
        const fileMode = "r";
        const fileStreamRead = Stream.openFile(filePath, fileMode);
        controller.p_elementCounter = fileStreamRead.readln().toInteger();
        const blockData = fileStreamRead.readln();
        stdout.$n(blockData = {blockData});
        fileStreamRead.close();
        var blockProperties = parseData(blockData);
        for ( var block in blockProperties) 
        {         
            controller.p_blockColorsList.push({
                id: block.id, 
                color: block.color,
                active: block.active
            });
        }
    }

}